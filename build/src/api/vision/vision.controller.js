"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const path = require('path');
const Vision = require('@google-cloud/vision');
const colors = require('colors/safe');
class Controller {
    constructor() {
    }
    respondWithResult(res, statusCode) {
        statusCode = statusCode || 200;
        return function (entity) {
            if (entity) {
                return res.status(statusCode).json(entity);
            }
            return null;
        };
    }
    handleError(res, statusCode) {
        statusCode = statusCode || 500;
        return function (err) {
            res.status(statusCode).send(err);
        };
    }
    analysePhoto(req, res) {
        console.log(colors.green('hello from api'));
        // Your Google Cloud Platform project ID
        const projectId = 'cloudapis-166021';
        // Instantiates a client
        const visionClient = Vision({
            projectId: projectId,
            keyFilename: path.normalize(`${__dirname}/../../config/CloudAPIS-748e768a7c4b.json`)
        });
        // The name of the image file to annotate
        const fileName = path.normalize(`${__dirname}/../../assets/demo-image.jpg`);
        // Performs label detection on the image file
        visionClient.detectLabels(fileName)
            .then((results) => {
            const labels = results[0];
            console.log('Labels:');
            labels.forEach((label) => console.log(label));
        })
            .catch((err) => {
            console.error('ERROR:', err);
        });
        res.status(200).end();
        return null;
    }
}
exports.default = Controller;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcGkvdmlzaW9uL3Zpc2lvbi5jb250cm9sbGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBTUEsTUFBTSxJQUFJLEdBQUcsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0FBQzdCLE1BQU0sTUFBTSxHQUFHLE9BQU8sQ0FBQyxzQkFBc0IsQ0FBQyxDQUFDO0FBQy9DLE1BQU0sTUFBTSxHQUFHLE9BQU8sQ0FBQyxhQUFhLENBQUMsQ0FBQztBQUV0QztJQUVFO0lBQ0EsQ0FBQztJQUVTLGlCQUFpQixDQUFDLEdBQWEsRUFBRSxVQUFrQjtRQUN6RCxVQUFVLEdBQUcsVUFBVSxJQUFJLEdBQUcsQ0FBQztRQUMvQixNQUFNLENBQUMsVUFBUyxNQUFXO1lBQ3pCLEVBQUUsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUM7Z0JBQ1gsTUFBTSxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsVUFBVSxDQUFDLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1lBQzdDLENBQUM7WUFDRCxNQUFNLENBQUMsSUFBSSxDQUFDO1FBQ2QsQ0FBQyxDQUFDO0lBQ0osQ0FBQztJQUVPLFdBQVcsQ0FBQyxHQUFhLEVBQUUsVUFBa0I7UUFDbkQsVUFBVSxHQUFHLFVBQVUsSUFBSSxHQUFHLENBQUM7UUFDL0IsTUFBTSxDQUFDLFVBQVMsR0FBd0I7WUFDdEMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxVQUFVLENBQUMsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDbkMsQ0FBQyxDQUFDO0lBQ0osQ0FBQztJQUVELFlBQVksQ0FBQyxHQUFZLEVBQUUsR0FBYTtRQUN0QyxPQUFPLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsZ0JBQWdCLENBQUMsQ0FBQyxDQUFDO1FBQzVDLHdDQUF3QztRQUN4QyxNQUFNLFNBQVMsR0FBRyxrQkFBa0IsQ0FBQztRQUVyQyx3QkFBd0I7UUFDeEIsTUFBTSxZQUFZLEdBQUcsTUFBTSxDQUFDO1lBQzFCLFNBQVMsRUFBRSxTQUFTO1lBQ3BCLFdBQVcsRUFBRSxJQUFJLENBQUMsU0FBUyxDQUFDLEdBQUcsU0FBUywyQ0FBMkMsQ0FBQztTQUNyRixDQUFDLENBQUM7UUFFSCx5Q0FBeUM7UUFDekMsTUFBTSxRQUFRLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxHQUFHLFNBQVMsOEJBQThCLENBQUMsQ0FBQztRQUU1RSw2Q0FBNkM7UUFDN0MsWUFBWSxDQUFDLFlBQVksQ0FBQyxRQUFRLENBQUM7YUFDaEMsSUFBSSxDQUFDLENBQUMsT0FBWTtZQUNqQixNQUFNLE1BQU0sR0FBRyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFFMUIsT0FBTyxDQUFDLEdBQUcsQ0FBQyxTQUFTLENBQUMsQ0FBQztZQUN2QixNQUFNLENBQUMsT0FBTyxDQUFDLENBQUMsS0FBVSxLQUFLLE9BQU8sQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQztRQUNyRCxDQUFDLENBQUM7YUFDRCxLQUFLLENBQUMsQ0FBQyxHQUFRO1lBQ2QsT0FBTyxDQUFDLEtBQUssQ0FBQyxRQUFRLEVBQUUsR0FBRyxDQUFDLENBQUM7UUFDL0IsQ0FBQyxDQUFDLENBQUM7UUFFTCxHQUFHLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsRUFBRSxDQUFDO1FBQ3RCLE1BQU0sQ0FBQyxJQUFJLENBQUM7SUFDZCxDQUFDO0NBQ0o7QUFuREQsNkJBbURDIiwiZmlsZSI6InNyYy9hcGkvdmlzaW9uL3Zpc2lvbi5jb250cm9sbGVyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgICBSZXF1ZXN0LFxuICAgIFJlc3BvbnNlLFxuICAgIEVycm9yUmVxdWVzdEhhbmRsZXJcbn0gZnJvbSAnZXhwcmVzcyc7XG5cbmNvbnN0IHBhdGggPSByZXF1aXJlKCdwYXRoJyk7XG5jb25zdCBWaXNpb24gPSByZXF1aXJlKCdAZ29vZ2xlLWNsb3VkL3Zpc2lvbicpO1xuY29uc3QgY29sb3JzID0gcmVxdWlyZSgnY29sb3JzL3NhZmUnKTtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQ29udHJvbGxlciB7XG4gIHZpc2lvbjogT2JqZWN0O1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgfVxuXG4gICAgcHJpdmF0ZSByZXNwb25kV2l0aFJlc3VsdChyZXM6IFJlc3BvbnNlLCBzdGF0dXNDb2RlOiBudW1iZXIpOiBGdW5jdGlvbiB7XG4gICAgICBzdGF0dXNDb2RlID0gc3RhdHVzQ29kZSB8fCAyMDA7XG4gICAgICByZXR1cm4gZnVuY3Rpb24oZW50aXR5OiBhbnkpIHtcbiAgICAgICAgaWYgKGVudGl0eSkge1xuICAgICAgICAgIHJldHVybiByZXMuc3RhdHVzKHN0YXR1c0NvZGUpLmpzb24oZW50aXR5KTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgIH07XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBoYW5kbGVFcnJvcihyZXM6IFJlc3BvbnNlLCBzdGF0dXNDb2RlOiBudW1iZXIpOiBGdW5jdGlvbiB7XG4gICAgICBzdGF0dXNDb2RlID0gc3RhdHVzQ29kZSB8fCA1MDA7XG4gICAgICByZXR1cm4gZnVuY3Rpb24oZXJyOiBFcnJvclJlcXVlc3RIYW5kbGVyKSB7XG4gICAgICAgIHJlcy5zdGF0dXMoc3RhdHVzQ29kZSkuc2VuZChlcnIpO1xuICAgICAgfTtcbiAgICB9XG5cbiAgICBhbmFseXNlUGhvdG8ocmVxOiBSZXF1ZXN0LCByZXM6IFJlc3BvbnNlKTogbnVsbCB7XG4gICAgICBjb25zb2xlLmxvZyhjb2xvcnMuZ3JlZW4oJ2hlbGxvIGZyb20gYXBpJykpO1xuICAgICAgLy8gWW91ciBHb29nbGUgQ2xvdWQgUGxhdGZvcm0gcHJvamVjdCBJRFxuICAgICAgY29uc3QgcHJvamVjdElkID0gJ2Nsb3VkYXBpcy0xNjYwMjEnO1xuXG4gICAgICAvLyBJbnN0YW50aWF0ZXMgYSBjbGllbnRcbiAgICAgIGNvbnN0IHZpc2lvbkNsaWVudCA9IFZpc2lvbih7XG4gICAgICAgIHByb2plY3RJZDogcHJvamVjdElkLFxuICAgICAgICBrZXlGaWxlbmFtZTogcGF0aC5ub3JtYWxpemUoYCR7X19kaXJuYW1lfS8uLi8uLi9jb25maWcvQ2xvdWRBUElTLTc0OGU3NjhhN2M0Yi5qc29uYClcbiAgICAgIH0pO1xuXG4gICAgICAvLyBUaGUgbmFtZSBvZiB0aGUgaW1hZ2UgZmlsZSB0byBhbm5vdGF0ZVxuICAgICAgY29uc3QgZmlsZU5hbWUgPSBwYXRoLm5vcm1hbGl6ZShgJHtfX2Rpcm5hbWV9Ly4uLy4uL2Fzc2V0cy9kZW1vLWltYWdlLmpwZ2ApO1xuXG4gICAgICAvLyBQZXJmb3JtcyBsYWJlbCBkZXRlY3Rpb24gb24gdGhlIGltYWdlIGZpbGVcbiAgICAgIHZpc2lvbkNsaWVudC5kZXRlY3RMYWJlbHMoZmlsZU5hbWUpXG4gICAgICAgIC50aGVuKChyZXN1bHRzOiBhbnkpID0+IHtcbiAgICAgICAgICBjb25zdCBsYWJlbHMgPSByZXN1bHRzWzBdO1xuXG4gICAgICAgICAgY29uc29sZS5sb2coJ0xhYmVsczonKTtcbiAgICAgICAgICBsYWJlbHMuZm9yRWFjaCgobGFiZWw6IGFueSkgPT4gY29uc29sZS5sb2cobGFiZWwpKTtcbiAgICAgICAgfSlcbiAgICAgICAgLmNhdGNoKChlcnI6IGFueSkgPT4ge1xuICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ0VSUk9SOicsIGVycik7XG4gICAgICAgIH0pO1xuXG4gICAgICByZXMuc3RhdHVzKDIwMCkuZW5kKCk7XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG59XG4iXX0=
